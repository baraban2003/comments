{"ast":null,"code":"var _jsxFileName = \"/Users/vb/comments/src/components/ItemList/ItemList.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { customAlphabet } from 'nanoid';\nimport s from './ItemList.module.css';\nimport useLocalState from '../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ItemList() {\n  _s();\n  const [text, setText] = useLocalState('input', '');\n  const [name, setName] = useState('');\n  const nanoid = customAlphabet('1234567890', 8);\n  const id = nanoid();\n  const handleChange = event => {\n    const setText = event.target;\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(event);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.searchForm,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.name,\n          type: \"text\",\n          name: \"name\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          value: text\n          // onChange={handleChange}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: s.ripple,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemList, \"iM3jgabAzaJPZ94GfTIWnXgtT5Q=\", false, function () {\n  return [useLocalState];\n});\n_c = ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["useState","customAlphabet","s","useLocalState","jsxDEV","_jsxDEV","ItemList","_s","text","setText","name","setName","nanoid","id","handleChange","event","target","handleSubmit","preventDefault","console","log","children","onSubmit","className","searchForm","fileName","_jsxFileName","lineNumber","columnNumber","type","title","required","value","ripple","_c","$RefreshReg$"],"sources":["/Users/vb/comments/src/components/ItemList/ItemList.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { customAlphabet } from 'nanoid';\nimport s from './ItemList.module.css';\nimport useLocalState from '../../hooks';\n\nexport default function ItemList() {\n  const [text, setText] = useLocalState('input', '');\n  const [name, setName] = useState('');\n  const nanoid = customAlphabet('1234567890', 8);\n  const id = nanoid();\n\n  const handleChange = (event: { target: string }) => {\n    const setText = event.target;\n  };\n\n  const handleSubmit = (event: { preventDefault: () => void }) => {\n    event.preventDefault();\n    console.log(event);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className={s.searchForm}>\n          <h2>Name</h2>\n          <input\n            className={s.name}\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={text}\n            // onChange={handleChange}\n          />\n\n          <button type=\"submit\" className={s.ripple}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,cAAc,QAAQ,QAAQ;AACvC,OAAOC,CAAC,MAAM,uBAAuB;AACrC,OAAOC,aAAa,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,aAAa,CAAC,OAAO,EAAE,EAAE,CAAC;EAClD,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMY,MAAM,GAAGX,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC;EAC9C,MAAMY,EAAE,GAAGD,MAAM,CAAC,CAAC;EAEnB,MAAME,YAAY,GAAIC,KAAyB,IAAK;IAClD,MAAMN,OAAO,GAAGM,KAAK,CAACC,MAAM;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAIF,KAAqC,IAAK;IAC9DA,KAAK,CAACG,cAAc,CAAC,CAAC;IACtBC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EACpB,CAAC;EAED,oBACEV,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MAAMiB,QAAQ,EAAEL,YAAa;MAAAI,QAAA,eAC3BhB,OAAA;QAAKkB,SAAS,EAAErB,CAAC,CAACsB,UAAW;QAAAH,QAAA,gBAC3BhB,OAAA;UAAAgB,QAAA,EAAI;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbvB,OAAA;UACEkB,SAAS,EAAErB,CAAC,CAACQ,IAAK;UAClBmB,IAAI,EAAC,MAAM;UACXnB,IAAI,EAAC,MAAM;UACXoB,KAAK,EAAC,wIAAwI;UAC9IC,QAAQ;UACRC,KAAK,EAAExB;UACP;QAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAEFvB,OAAA;UAAQwB,IAAI,EAAC,QAAQ;UAACN,SAAS,EAAErB,CAAC,CAAC+B,MAAO;UAAAZ,QAAA,EAAC;QAE3C;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACrB,EAAA,CArCuBD,QAAQ;EAAA,QACNH,aAAa;AAAA;AAAA+B,EAAA,GADf5B,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}