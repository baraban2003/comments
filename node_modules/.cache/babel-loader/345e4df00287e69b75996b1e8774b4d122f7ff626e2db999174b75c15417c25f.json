{"ast":null,"code":"var _jsxFileName = \"/Users/vb/comments/src/components/CommentsList/CommentsList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './CommentsList.module.css';\nimport useLocalState from '../../hooks';\nimport Comments from '../Comments/Comments';\nimport { customAlphabet } from 'nanoid';\nimport { HexColorPicker } from 'react-colorful';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentsList() {\n  _s();\n  const [items, setItems] = useLocalState('items', []);\n  const [activeItem, setActiveItem] = useLocalState('activeItem', []);\n  const [name, setName] = useState('');\n  const [colorPickerVisible, setColorPickerVisible] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const [commentColors, setCommentColors] = useState({});\n  const nanoid = customAlphabet('1234567890', 8);\n  const idNano = nanoid();\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const updatedItems = items.map(i => {\n      if (i.id === activeItem[0].id) {\n        i.comments.push([activeItem[0].id, name, idNano]);\n      }\n      return i;\n    });\n    setItems(updatedItems);\n    setName('');\n    const active = items.filter(e => e.id === activeItem[0].id);\n    setActiveItem(active);\n  };\n  const handleColorChange = (commentId, newColor) => {\n    setCommentColors(prevColors => ({\n      ...prevColors,\n      [commentId]: newColor\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.searchForm,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Type comment here...\",\n          className: s.name,\n          type: \"text\",\n          name: \"name\",\n          title: \"Place for comments\",\n          required: true,\n          value: name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: s.ripple,\n          children: \"Add new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: activeItem && activeItem[0] && activeItem[0].comments ? activeItem[0].comments.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [commentColors[e[2]] && /*#__PURE__*/_jsxDEV(HexColorPicker, {\n          color: commentColors[e[2]],\n          onChange: newColor => handleColorChange(e[2], newColor)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Comments, {\n          commentName: e[1],\n          color: commentColors[e[2]] || '#000000',\n          handleClick: () => handleColorChange(e[2], color)\n        }, e[2], false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, e[2], true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsList, \"JL6cTfidz1lC8XZ7VJ6PeEoZWv4=\", false, function () {\n  return [useLocalState, useLocalState];\n});\n_c = CommentsList;\nvar _c;\n$RefreshReg$(_c, \"CommentsList\");","map":{"version":3,"names":["React","useState","s","useLocalState","Comments","customAlphabet","HexColorPicker","jsxDEV","_jsxDEV","CommentsList","_s","items","setItems","activeItem","setActiveItem","name","setName","colorPickerVisible","setColorPickerVisible","color","setColor","commentColors","setCommentColors","nanoid","idNano","handleChange","event","target","value","handleSubmit","preventDefault","updatedItems","map","i","id","comments","push","active","filter","e","handleColorChange","commentId","newColor","prevColors","children","onSubmit","className","searchForm","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","title","required","onChange","ripple","commentName","handleClick","_c","$RefreshReg$"],"sources":["/Users/vb/comments/src/components/CommentsList/CommentsList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport s from './CommentsList.module.css';\nimport useLocalState from '../../hooks';\nimport Comments from '../Comments/Comments';\nimport { customAlphabet } from 'nanoid';\nimport { HexColorPicker } from 'react-colorful';\n\nexport default function CommentsList() {\n  const [items, setItems] = useLocalState('items', []);\n\n  const [activeItem, setActiveItem] = useLocalState('activeItem', []);\n  const [name, setName] = useState('');\n  const [colorPickerVisible, setColorPickerVisible] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const [commentColors, setCommentColors] = useState({});\n\n  const nanoid = customAlphabet('1234567890', 8);\n  const idNano = nanoid();\n\n  const handleChange = (event: {\n    target: { value: React.SetStateAction<string> };\n  }) => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = (event: { preventDefault: () => void }) => {\n    event.preventDefault();\n\n    const updatedItems = items.map((i: { id: any; comments: any[][] }) => {\n      if (i.id === activeItem[0].id) {\n        i.comments.push([activeItem[0].id, name, idNano]);\n      }\n      return i;\n    });\n    setItems(updatedItems);\n    setName('');\n\n    const active = items.filter((e: { id: any }) => e.id === activeItem[0].id);\n    setActiveItem(active);\n  };\n\n  const handleColorChange = (commentId: any, newColor: string) => {\n    setCommentColors(prevColors => ({\n      ...prevColors,\n      [commentId]: newColor,\n    }));\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className={s.searchForm}>\n          <h3>Comments</h3>\n          <input\n            placeholder=\"Type comment here...\"\n            className={s.name}\n            type=\"text\"\n            name=\"name\"\n            title=\"Place for comments\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n\n          <button type=\"submit\" className={s.ripple}>\n            Add new\n          </button>\n        </div>\n      </form>\n      <ul>\n        {activeItem && activeItem[0] && activeItem[0].comments ? (\n          activeItem[0].comments.map((e: (React.Key | null | undefined)[]) => (\n            <div key={e[2]}>\n              {commentColors[e[2]] && (\n                <HexColorPicker\n                  color={commentColors[e[2]]}\n                  onChange={newColor => handleColorChange(e[2], newColor)}\n                />\n              )}\n              <Comments\n                commentName={e[1]}\n                color={commentColors[e[2]] || '#000000'}\n                handleClick={() => handleColorChange(e[2], color)}\n                key={e[2]}\n              />\n            </div>\n          ))\n        ) : (\n          <p>No comments available</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}