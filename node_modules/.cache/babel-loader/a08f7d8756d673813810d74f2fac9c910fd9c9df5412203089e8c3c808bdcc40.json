{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nexport default function useLocalState(key, initial) {\n  _s();\n  // Функция для получения значения из локального хранилища\n  const getStoredValue = () => {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      const saved = window.localStorage.getItem(key);\n      if (saved) {\n        return JSON.parse(saved);\n      }\n    }\n    return initial;\n  };\n  const [value, setValue] = useState(getStoredValue);\n  useEffect(() => {\n    if (window.localStorage) {\n      const serializedValue = JSON.stringify(value);\n      window.localStorage.setItem(key, serializedValue);\n    }\n  }, [key, value]);\n\n  // Функция для обновления значения из локального хранилища\n  const updateStoredValue = () => {\n    const storedValue = getStoredValue();\n    if (storedValue !== value) {\n      setValue(storedValue);\n    }\n  };\n\n  // Вызываем функцию обновления при монтировании компонента\n  useEffect(() => {\n    updateStoredValue();\n  }, []);\n\n  // Вызываем функцию обновления периодически, чтобы следить за изменениями в локальном хранилище\n  useEffect(() => {\n    const interval = setInterval(updateStoredValue, 1000); // Пример: каждую секунду\n    return () => clearInterval(interval);\n  }, []);\n  return [value, setValue];\n}\n_s(useLocalState, \"M9UA3A6TibT8G8OhdxYAdrZtix0=\");","map":{"version":3,"names":["useEffect","useState","useLocalState","key","initial","_s","getStoredValue","window","localStorage","saved","getItem","JSON","parse","value","setValue","serializedValue","stringify","setItem","updateStoredValue","storedValue","interval","setInterval","clearInterval"],"sources":["/Users/vb/comments/src/hooks/useLocalState.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useLocalState(key: string, initial: any) {\n  // Функция для получения значения из локального хранилища\n  const getStoredValue = () => {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      const saved = window.localStorage.getItem(key);\n      if (saved) {\n        return JSON.parse(saved);\n      }\n    }\n    return initial;\n  };\n\n  const [value, setValue] = useState(getStoredValue);\n\n  useEffect(() => {\n    if (window.localStorage) {\n      const serializedValue = JSON.stringify(value);\n      window.localStorage.setItem(key, serializedValue);\n    }\n  }, [key, value]);\n\n  // Функция для обновления значения из локального хранилища\n  const updateStoredValue = () => {\n    const storedValue = getStoredValue();\n    if (storedValue !== value) {\n      setValue(storedValue);\n    }\n  };\n\n  // Вызываем функцию обновления при монтировании компонента\n  useEffect(() => {\n    updateStoredValue();\n  }, []);\n\n  // Вызываем функцию обновления периодически, чтобы следить за изменениями в локальном хранилище\n  useEffect(() => {\n    const interval = setInterval(updateStoredValue, 1000); // Пример: каждую секунду\n    return () => clearInterval(interval);\n  }, []);\n\n  return [value, setValue];\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,eAAe,SAASC,aAAaA,CAACC,GAAW,EAAEC,OAAY,EAAE;EAAAC,EAAA;EAC/D;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAIA,MAAM,CAACC,YAAY,EAAE;MACxD,MAAMC,KAAK,GAAGF,MAAM,CAACC,YAAY,CAACE,OAAO,CAACP,GAAG,CAAC;MAC9C,IAAIM,KAAK,EAAE;QACT,OAAOE,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC;MAC1B;IACF;IACA,OAAOL,OAAO;EAChB,CAAC;EAED,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACK,cAAc,CAAC;EAElDN,SAAS,CAAC,MAAM;IACd,IAAIO,MAAM,CAACC,YAAY,EAAE;MACvB,MAAMO,eAAe,GAAGJ,IAAI,CAACK,SAAS,CAACH,KAAK,CAAC;MAC7CN,MAAM,CAACC,YAAY,CAACS,OAAO,CAACd,GAAG,EAAEY,eAAe,CAAC;IACnD;EACF,CAAC,EAAE,CAACZ,GAAG,EAAEU,KAAK,CAAC,CAAC;;EAEhB;EACA,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,WAAW,GAAGb,cAAc,CAAC,CAAC;IACpC,IAAIa,WAAW,KAAKN,KAAK,EAAE;MACzBC,QAAQ,CAACK,WAAW,CAAC;IACvB;EACF,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACdkB,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAlB,SAAS,CAAC,MAAM;IACd,MAAMoB,QAAQ,GAAGC,WAAW,CAACH,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;IACvD,OAAO,MAAMI,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACP,KAAK,EAAEC,QAAQ,CAAC;AAC1B;AAACT,EAAA,CAzCuBH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}