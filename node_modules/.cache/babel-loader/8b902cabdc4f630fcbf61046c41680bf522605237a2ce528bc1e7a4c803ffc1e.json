{"ast":null,"code":"var _jsxFileName = \"/Users/vb/comments/src/components/CommentsList/CommentsList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './CommentsList.module.css';\nimport useLocalState from '../../hooks';\nimport Comments from '../Comments/Comments';\nimport { customAlphabet } from 'nanoid';\nimport { HexColorPicker } from 'react-colorful';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentsList() {\n  _s();\n  var _activeItem$, _activeItem$2;\n  const [items, setItems] = useLocalState('items', []);\n  const [activeItem, setActiveItem] = useLocalState('activeItem', []);\n  const [name, setName] = useState('');\n  const [colorPickerVisible, setColorPickerVisible] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const nanoid = customAlphabet('1234567890', 8);\n  const idNano = nanoid();\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const updatedItems = items.map(i => {\n      if (activeItem.length === 0) {\n        alert('Please choose the item!');\n        return;\n      }\n      if (i.id == activeItem[0].id) {\n        i.comments.push([activeItem[0].id, name, idNano, color]);\n      }\n      return i;\n    });\n    setItems(updatedItems);\n    setName('');\n    setColor('#000000');\n    const active = items.filter(e => e.id == activeItem[0].id);\n    setActiveItem(active);\n  };\n  const handleColorChange = () => {\n    setColorPickerVisible(!colorPickerVisible);\n  };\n  console.log('activeItem:', activeItem);\n  console.log('activeItem[0]:', activeItem[0]);\n  console.log('activeItem[0]?.comments:', (_activeItem$ = activeItem[0]) === null || _activeItem$ === void 0 ? void 0 : _activeItem$.comments);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.commentsBlok,\n    children: [activeItem && activeItem[0] && activeItem[0].comments ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: s.commentsName,\n      children: [\"Comments\", ` #${activeItem[0].id}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: s.listCommentsName,\n      children: activeItem.length > 0 ? (_activeItem$2 = activeItem[0]) !== null && _activeItem$2 !== void 0 && _activeItem$2.comments ? activeItem[0].comments.map(e => /*#__PURE__*/_jsxDEV(Comments, {\n        commentName: e[1],\n        color: e[3]\n      }, e[2], false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.commentsBlokElem,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.colorInputBlock,\n          style: {\n            backgroundColor: color\n          },\n          onClick: handleColorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), colorPickerVisible && /*#__PURE__*/_jsxDEV(HexColorPicker, {\n          className: s.colorPicker,\n          color: color,\n          onChange: setColor,\n          style: {\n            position: 'absolute',\n            zIndex: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Type comment here...\",\n          className: s.nameTextarea,\n          name: \"name\",\n          title: \"Place for comments\",\n          required: true,\n          value: name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: s.commentsAddButton,\n          children: \"Add new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsList, \"L7KWKmylLIn62qtMutou2nOLDto=\", false, function () {\n  return [useLocalState, useLocalState];\n});\n_c = CommentsList;\nvar _c;\n$RefreshReg$(_c, \"CommentsList\");","map":{"version":3,"names":["React","useState","s","useLocalState","Comments","customAlphabet","HexColorPicker","jsxDEV","_jsxDEV","CommentsList","_s","_activeItem$","_activeItem$2","items","setItems","activeItem","setActiveItem","name","setName","colorPickerVisible","setColorPickerVisible","color","setColor","nanoid","idNano","handleChange","event","target","value","handleSubmit","preventDefault","updatedItems","map","i","length","alert","id","comments","push","active","filter","e","handleColorChange","console","log","className","commentsBlok","children","commentsName","fileName","_jsxFileName","lineNumber","columnNumber","listCommentsName","commentName","onSubmit","commentsBlokElem","colorInputBlock","style","backgroundColor","onClick","colorPicker","onChange","position","zIndex","placeholder","nameTextarea","title","required","type","commentsAddButton","_c","$RefreshReg$"],"sources":["/Users/vb/comments/src/components/CommentsList/CommentsList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport s from './CommentsList.module.css';\nimport useLocalState from '../../hooks';\nimport Comments from '../Comments/Comments';\nimport { customAlphabet } from 'nanoid';\nimport { HexColorPicker } from 'react-colorful';\n\ntype CommentTuple = [number, string, string, string];\n\nexport default function CommentsList() {\n  const [items, setItems] = useLocalState('items', []);\n\n  const [activeItem, setActiveItem] = useLocalState('activeItem', []);\n  const [name, setName] = useState('');\n\n  const [colorPickerVisible, setColorPickerVisible] = useState(false);\n  const [color, setColor] = useState('#000000');\n\n  const nanoid = customAlphabet('1234567890', 8);\n  const idNano = nanoid();\n\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const updatedItems = items.map(\n      (i: { comments: CommentTuple[]; id: number }) => {\n        if (activeItem.length === 0) {\n          alert('Please choose the item!');\n          return;\n        }\n        if (i.id == activeItem[0].id) {\n          i.comments.push([activeItem[0].id, name, idNano, color]);\n        }\n        return i;\n      }\n    );\n    setItems(updatedItems);\n    setName('');\n    setColor('#000000');\n\n    const active = items.filter(\n      (e: { id: string }) => e.id == activeItem[0].id\n    );\n    setActiveItem(active);\n  };\n\n  const handleColorChange = () => {\n    setColorPickerVisible(!colorPickerVisible);\n  };\n\n  console.log('activeItem:', activeItem);\n  console.log('activeItem[0]:', activeItem[0]);\n  console.log('activeItem[0]?.comments:', activeItem[0]?.comments);\n\n  return (\n    <div className={s.commentsBlok}>\n      {activeItem && activeItem[0] && activeItem[0].comments ? (\n        <h2 className={s.commentsName}>Comments{` #${activeItem[0].id}`}</h2>\n      ) : null}\n      <ul className={s.listCommentsName}>\n        {activeItem.length > 0 ? (\n          activeItem[0]?.comments ? (\n            activeItem[0].comments.map((e: CommentTuple) => (\n              <Comments commentName={e[1]} color={e[3]} key={e[2]} />\n            ))\n          ) : (\n            <p>No comments available</p>\n          )\n        ) : (\n          <p>No comments available</p>\n        )}\n      </ul>\n      <form onSubmit={handleSubmit}>\n        <div className={s.commentsBlokElem}>\n          <div\n            className={s.colorInputBlock}\n            style={{\n              backgroundColor: color,\n            }}\n            onClick={handleColorChange}\n          ></div>\n          {colorPickerVisible && (\n            <HexColorPicker\n              className={s.colorPicker}\n              color={color}\n              onChange={setColor}\n              style={{\n                position: 'absolute',\n                zIndex: 1,\n              }}\n            />\n          )}\n          <textarea\n            placeholder=\"Type comment here...\"\n            className={s.nameTextarea}\n            name=\"name\"\n            title=\"Place for comments\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n\n          <button type=\"submit\" className={s.commentsAddButton}>\n            Add new\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}