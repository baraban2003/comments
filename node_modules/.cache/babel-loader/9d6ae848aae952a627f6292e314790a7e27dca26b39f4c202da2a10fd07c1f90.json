{"ast":null,"code":"var _jsxFileName = \"/Users/vb/comments/src/components/ItemList/ItemList.tsx\",\n  _s = $RefreshSig$();\nimport { customAlphabet } from 'nanoid';\nimport s from './ItemList.module.css';\nimport useLocalState from '../../hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ItemList() {\n  _s();\n  const [text, setText] = useLocalState('input', '');\n  const nanoid = customAlphabet('1234567890', 8);\n  const id = nanoid();\n  const handleChange = event => {\n    const setName = event.target;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.searchForm,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: s.name,\n          type: \"text\",\n          name: \"name\",\n          title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n          required: true,\n          value: name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: s.ripple,\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemList, \"83FAq4H+msFAvf1rGdRfiEFLH1I=\", false, function () {\n  return [useLocalState];\n});\n_c = ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["customAlphabet","s","useLocalState","jsxDEV","_jsxDEV","ItemList","_s","text","setText","nanoid","id","handleChange","event","setName","target","children","onSubmit","handleSubmit","className","searchForm","fileName","_jsxFileName","lineNumber","columnNumber","name","type","title","required","value","onChange","ripple","_c","$RefreshReg$"],"sources":["/Users/vb/comments/src/components/ItemList/ItemList.tsx"],"sourcesContent":["import { useState } from 'react';\nimport { customAlphabet } from 'nanoid';\nimport s from './ItemList.module.css';\nimport useLocalState from '../../hooks';\n\nexport default function ItemList() {\n  const [text, setText] = useLocalState('input', '');\n  const nanoid = customAlphabet('1234567890', 8);\n  const id = nanoid();\n\n  const handleChange = (event: { target: string }) => {\n    const setName = event.target;\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className={s.searchForm}>\n          <h2>Name</h2>\n          <input\n            className={s.name}\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n\n          <button type=\"submit\" className={s.ripple}>\n            Add contact\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":";;AACA,SAASA,cAAc,QAAQ,QAAQ;AACvC,OAAOC,CAAC,MAAM,uBAAuB;AACrC,OAAOC,aAAa,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,aAAa,CAAC,OAAO,EAAE,EAAE,CAAC;EAClD,MAAMO,MAAM,GAAGT,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC;EAC9C,MAAMU,EAAE,GAAGD,MAAM,CAAC,CAAC;EAEnB,MAAME,YAAY,GAAIC,KAAyB,IAAK;IAClD,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM;EAC9B,CAAC;EAED,oBACEV,OAAA;IAAAW,QAAA,eACEX,OAAA;MAAMY,QAAQ,EAAEC,YAAa;MAAAF,QAAA,eAC3BX,OAAA;QAAKc,SAAS,EAAEjB,CAAC,CAACkB,UAAW;QAAAJ,QAAA,gBAC3BX,OAAA;UAAAW,QAAA,EAAI;QAAI;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbnB,OAAA;UACEc,SAAS,EAAEjB,CAAC,CAACuB,IAAK;UAClBC,IAAI,EAAC,MAAM;UACXD,IAAI,EAAC,MAAM;UACXE,KAAK,EAAC,wIAAwI;UAC9IC,QAAQ;UACRC,KAAK,EAAEJ,IAAK;UACZK,QAAQ,EAAElB;QAAa;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,eAEFnB,OAAA;UAAQqB,IAAI,EAAC,QAAQ;UAACP,SAAS,EAAEjB,CAAC,CAAC6B,MAAO;UAAAf,QAAA,EAAC;QAE3C;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACjB,EAAA,CA/BuBD,QAAQ;EAAA,QACNH,aAAa;AAAA;AAAA6B,EAAA,GADf1B,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}