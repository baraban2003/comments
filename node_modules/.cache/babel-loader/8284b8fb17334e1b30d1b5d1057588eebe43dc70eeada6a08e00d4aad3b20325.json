{"ast":null,"code":"import _slicedToArray from\"/Users/vb/comments/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';export default function useLocalState(key,initial){// Функция для получения значения из локального хранилища\nvar getStoredValue=function getStoredValue(){if(typeof window!=='undefined'&&window.localStorage){var saved=window.localStorage.getItem(key);if(saved){return JSON.parse(saved);}}return initial;};var _useState=useState(getStoredValue),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];useEffect(function(){if(window.localStorage){var serializedValue=JSON.stringify(value);window.localStorage.setItem(key,serializedValue);}},[key,value]);// Функция для обновления значения из локального хранилища\nvar updateStoredValue=function updateStoredValue(){var storedValue=getStoredValue();if(storedValue!==value){setValue(storedValue);}};// Вызываем функцию обновления при монтировании компонента\nuseEffect(function(){updateStoredValue();},[]);// Вызываем функцию обновления периодически, чтобы следить за изменениями в локальном хранилище\nuseEffect(function(){var interval=setInterval(updateStoredValue,1000);// Пример: каждую секунду\nreturn function(){return clearInterval(interval);};},[]);return[value,setValue];}","map":{"version":3,"names":["useEffect","useState","useLocalState","key","initial","getStoredValue","window","localStorage","saved","getItem","JSON","parse","_useState","_useState2","_slicedToArray","value","setValue","serializedValue","stringify","setItem","updateStoredValue","storedValue","interval","setInterval","clearInterval"],"sources":["/Users/vb/comments/src/hooks/useLocalState.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport default function useLocalState(key: string, initial: any) {\n  // Функция для получения значения из локального хранилища\n  const getStoredValue = () => {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      const saved = window.localStorage.getItem(key);\n      if (saved) {\n        return JSON.parse(saved);\n      }\n    }\n    return initial;\n  };\n\n  const [value, setValue] = useState(getStoredValue);\n\n  useEffect(() => {\n    if (window.localStorage) {\n      const serializedValue = JSON.stringify(value);\n      window.localStorage.setItem(key, serializedValue);\n    }\n  }, [key, value]);\n\n  // Функция для обновления значения из локального хранилища\n  const updateStoredValue = () => {\n    const storedValue = getStoredValue();\n    if (storedValue !== value) {\n      setValue(storedValue);\n    }\n  };\n\n  // Вызываем функцию обновления при монтировании компонента\n  useEffect(() => {\n    updateStoredValue();\n  }, []);\n\n  // Вызываем функцию обновления периодически, чтобы следить за изменениями в локальном хранилище\n  useEffect(() => {\n    const interval = setInterval(updateStoredValue, 1000); // Пример: каждую секунду\n    return () => clearInterval(interval);\n  }, []);\n\n  return [value, setValue];\n}\n"],"mappings":"wGAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,cAAe,SAAS,CAAAC,aAAaA,CAACC,GAAW,CAAEC,OAAY,CAAE,CAC/D;AACA,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CAC3B,GAAI,MAAO,CAAAC,MAAM,GAAK,WAAW,EAAIA,MAAM,CAACC,YAAY,CAAE,CACxD,GAAM,CAAAC,KAAK,CAAGF,MAAM,CAACC,YAAY,CAACE,OAAO,CAACN,GAAG,CAAC,CAC9C,GAAIK,KAAK,CAAE,CACT,MAAO,CAAAE,IAAI,CAACC,KAAK,CAACH,KAAK,CAAC,CAC1B,CACF,CACA,MAAO,CAAAJ,OAAO,CAChB,CAAC,CAED,IAAAQ,SAAA,CAA0BX,QAAQ,CAACI,cAAc,CAAC,CAAAQ,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3CG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IAEtBb,SAAS,CAAC,UAAM,CACd,GAAIM,MAAM,CAACC,YAAY,CAAE,CACvB,GAAM,CAAAU,eAAe,CAAGP,IAAI,CAACQ,SAAS,CAACH,KAAK,CAAC,CAC7CT,MAAM,CAACC,YAAY,CAACY,OAAO,CAAChB,GAAG,CAAEc,eAAe,CAAC,CACnD,CACF,CAAC,CAAE,CAACd,GAAG,CAAEY,KAAK,CAAC,CAAC,CAEhB;AACA,GAAM,CAAAK,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CAC9B,GAAM,CAAAC,WAAW,CAAGhB,cAAc,CAAC,CAAC,CACpC,GAAIgB,WAAW,GAAKN,KAAK,CAAE,CACzBC,QAAQ,CAACK,WAAW,CAAC,CACvB,CACF,CAAC,CAED;AACArB,SAAS,CAAC,UAAM,CACdoB,iBAAiB,CAAC,CAAC,CACrB,CAAC,CAAE,EAAE,CAAC,CAEN;AACApB,SAAS,CAAC,UAAM,CACd,GAAM,CAAAsB,QAAQ,CAAGC,WAAW,CAACH,iBAAiB,CAAE,IAAI,CAAC,CAAE;AACvD,MAAO,kBAAM,CAAAI,aAAa,CAACF,QAAQ,CAAC,GACtC,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAACP,KAAK,CAAEC,QAAQ,CAAC,CAC1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}