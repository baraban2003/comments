{"ast":null,"code":"var _jsxFileName = \"/Users/vb/comments/src/components/CommentsList/CommentsList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport s from './CommentsList.module.css';\nimport useLocalState from '../../hooks';\nimport Comments from '../Comments/Comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CommentsList() {\n  _s();\n  const [items, setItems] = useLocalState('items', []);\n  const [activeItem, setActiveItem] = useLocalState('activeItem', []);\n  const [name, setName] = useState('');\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const idCreator = oldId => {\n      const parts = oldId.split('-');\n      if (parts.length === 2 && /^\\d+$/.test(parts[1])) {\n        const incrementedNumber = parseInt(parts[1], 10) + 1;\n        const newId = `${parts[0]}-${incrementedNumber}`;\n        return newId;\n      }\n      return oldId;\n    };\n    const updatedItems = items.map(i => {\n      if (i.id == activeItem[0].id) {\n        i.comments.push([idCreator(activeItem[0].id), name]);\n      }\n      return i;\n    });\n    setItems(updatedItems);\n    setName('');\n    const active = items.filter(e => e.id == activeItem[0].id);\n    setActiveItem(active);\n    console.log(event.target);\n  };\n  const handleColor = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.searchForm,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Type comment here...\",\n          className: s.name,\n          type: \"text\",\n          name: \"name\",\n          title: \"Place for comments\",\n          required: true,\n          value: name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: s.ripple,\n          children: \"Add new\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: activeItem && activeItem[0] && activeItem[0].comments ? activeItem[0].comments.map(e => /*#__PURE__*/_jsxDEV(Comments, {\n        commentName: e,\n        color: 'Yellow',\n        handleClick: undefined\n      }, activeItem[0].id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(CommentsList, \"y5D8brhBkZpO21u7DrXjHwO70/E=\", false, function () {\n  return [useLocalState, useLocalState];\n});\n_c = CommentsList;\nvar _c;\n$RefreshReg$(_c, \"CommentsList\");","map":{"version":3,"names":["React","useState","s","useLocalState","Comments","jsxDEV","_jsxDEV","CommentsList","_s","items","setItems","activeItem","setActiveItem","name","setName","handleChange","event","target","value","handleSubmit","preventDefault","idCreator","oldId","parts","split","length","test","incrementedNumber","parseInt","newId","updatedItems","map","i","id","comments","push","active","filter","e","console","log","handleColor","children","onSubmit","className","searchForm","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","title","required","onChange","ripple","commentName","color","handleClick","undefined","_c","$RefreshReg$"],"sources":["/Users/vb/comments/src/components/CommentsList/CommentsList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport s from './CommentsList.module.css';\nimport useLocalState from '../../hooks';\nimport Comments from '../Comments/Comments';\n\nexport default function CommentsList() {\n  const [items, setItems] = useLocalState('items', []);\n\n  const [activeItem, setActiveItem] = useLocalState('activeItem', []);\n  const [name, setName] = useState('');\n\n  const handleChange = (event: { target: any }) => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = (event: { target: any; preventDefault: () => void }) => {\n    event.preventDefault();\n\n    const idCreator = (oldId: string) => {\n      const parts = oldId.split('-');\n\n      if (parts.length === 2 && /^\\d+$/.test(parts[1])) {\n        const incrementedNumber = parseInt(parts[1], 10) + 1;\n        const newId = `${parts[0]}-${incrementedNumber}`;\n        return newId;\n      }\n      return oldId;\n    };\n\n    const updatedItems = items.map((i: { comments: any; id: any }) => {\n      if (i.id == activeItem[0].id) {\n        i.comments.push([idCreator(activeItem[0].id), name]);\n      }\n      return i;\n    });\n    setItems(updatedItems);\n    setName('');\n\n    const active = items.filter((e: { id: any }) => e.id == activeItem[0].id);\n    setActiveItem(active);\n    console.log(event.target);\n  };\n\n  const handleColor = () => {};\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className={s.searchForm}>\n          <h3>Comments</h3>\n          <input\n            placeholder=\"Type comment here...\"\n            className={s.name}\n            type=\"text\"\n            name=\"name\"\n            title=\"Place for comments\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n\n          <button type=\"submit\" className={s.ripple}>\n            Add new\n          </button>\n        </div>\n      </form>\n      <ul>\n        {activeItem && activeItem[0] && activeItem[0].comments ? (\n          activeItem[0].comments.map((e: string) => (\n            <Comments\n              commentName={e}\n              color={'Yellow'}\n              handleClick={undefined}\n              key={activeItem[0].id}\n            />\n          ))\n        ) : (\n          <p>No comments available</p>\n        )}\n      </ul>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}