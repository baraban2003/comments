[{"/Users/vb/comments/src/index.tsx":"1","/Users/vb/comments/src/reportWebVitals.ts":"2","/Users/vb/comments/src/App.tsx":"3","/Users/vb/comments/src/components/Sidebar/Sidebar.tsx":"4","/Users/vb/comments/src/components/Sidebar/index.js":"5","/Users/vb/comments/src/components/ItemList/index.js":"6","/Users/vb/comments/src/components/ItemList/ItemList.tsx":"7","/Users/vb/comments/src/hooks/index.js":"8","/Users/vb/comments/src/hooks/useLocalState.tsx":"9","/Users/vb/comments/src/components/Item/Item.tsx":"10","/Users/vb/comments/src/components/CommentsList/index.js":"11","/Users/vb/comments/src/components/CommentsList/CommentsList.tsx":"12","/Users/vb/comments/src/components/Comments/Comments.tsx":"13"},{"size":554,"mtime":1695222586013,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1695222586014,"results":"16","hashOfConfig":"15"},{"size":453,"mtime":1695306143042,"results":"17","hashOfConfig":"15"},{"size":404,"mtime":1695228672399,"results":"18","hashOfConfig":"15"},{"size":37,"mtime":1695226614444,"results":"19","hashOfConfig":"15"},{"size":38,"mtime":1695233662229,"results":"20","hashOfConfig":"15"},{"size":2341,"mtime":1695386814720,"results":"21","hashOfConfig":"15"},{"size":43,"mtime":1695286278953,"results":"22","hashOfConfig":"15"},{"size":1523,"mtime":1695324600820,"results":"23","hashOfConfig":"15"},{"size":586,"mtime":1695385223624,"results":"24","hashOfConfig":"15"},{"size":42,"mtime":1695306289661,"results":"25","hashOfConfig":"15"},{"size":2935,"mtime":1695384496543,"results":"26","hashOfConfig":"15"},{"size":460,"mtime":1695382172583,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"17y9trl",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/vb/comments/src/index.tsx",[],[],[],"/Users/vb/comments/src/reportWebVitals.ts",[],[],"/Users/vb/comments/src/App.tsx",[],[],"/Users/vb/comments/src/components/Sidebar/Sidebar.tsx",[],[],"/Users/vb/comments/src/components/Sidebar/index.js",[],[],[],"/Users/vb/comments/src/components/ItemList/index.js",[],[],"/Users/vb/comments/src/components/ItemList/ItemList.tsx",["72","73"],[],"import { Key, useEffect, useState } from 'react';\nimport { customAlphabet } from 'nanoid';\nimport s from './ItemList.module.css';\nimport useLocalState from '../../hooks';\nimport Item from '../Item/Item';\n\nexport default function ItemList() {\n  const [items, setItems] = useLocalState('items', []);\n  const [activeItem, setActiveItem] = useLocalState('activeItem', []);\n\n  const [name, setName] = useState('');\n\n  const nanoid = customAlphabet('1234567890', 8);\n  const id = nanoid();\n\n  const handleChange = (event: { target: any }) => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = (event: { target: any; preventDefault: () => void }) => {\n    event.preventDefault();\n\n    setItems([...items, ...[{ id, name, comments: [] }]]);\n\n    setName('');\n  };\n\n  const deleteEl = (elem: any) => {\n    const deleted = items.filter((e: { id: any }) => e.id !== elem);\n    setItems(deleted);\n  };\n\n  const activate = (event: any) => {\n    const active = items.filter((e: { id: any }) => e.id == event.target.id);\n    setActiveItem(active);\n  };\n\n  return (\n    <div className={s.itemForm}>\n      <h2 className={s.itemName}>Items</h2>\n      <form onSubmit={handleSubmit}>\n        <div className={s.itemFormElem}>\n          <input\n            placeholder=\"Type name here...\"\n            className={s.name}\n            type=\"text\"\n            name=\"name\"\n            title=\"Place for adding items\"\n            required\n            value={name}\n            onChange={handleChange}\n            autoComplete=\"off\"\n          />\n\n          <button type=\"submit\" className={s.button}>\n            Add Item\n          </button>\n        </div>\n      </form>\n      <ul className={s.listGroup}>\n        {items.map(\n          (e: {\n            comments: any;\n            d: Key | null | undefined;\n            id: string;\n            name: string;\n          }) => {\n            const isActive = activeItem?.[0]?.id === e.id;\n            return (\n              <div className={isActive ? s.picker : ''}>\n                <Item\n                  key={e.id}\n                  id={e.id}\n                  itemName={e.name}\n                  deleteEl={deleteEl}\n                  comentsCalc={e.comments.length}\n                  active={activate}\n                />\n              </div>\n            );\n          }\n        )}\n      </ul>\n    </div>\n  );\n}\n","/Users/vb/comments/src/hooks/index.js",[],[],"/Users/vb/comments/src/hooks/useLocalState.tsx",["74","75"],[],"import { useEffect, useState } from 'react';\n\nexport default function useLocalState(key: string, initial: any) {\n  // Функция для получения значения из локального хранилища\n  const getStoredValue = () => {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      const saved = window.localStorage.getItem(key);\n      if (saved) {\n        return JSON.parse(saved);\n      }\n    }\n    return initial;\n  };\n\n  const [value, setValue] = useState(getStoredValue);\n\n  useEffect(() => {\n    if (window.localStorage) {\n      const serializedValue = JSON.stringify(value);\n      window.localStorage.setItem(key, serializedValue);\n    }\n  }, [key, value]);\n\n  // Функция для обновления значения из локального хранилища\n  const updateStoredValue = () => {\n    const storedValue = getStoredValue();\n    if (storedValue !== value) {\n      setValue(storedValue);\n    }\n  };\n\n  // Вызываем функцию обновления при монтировании компонента\n  useEffect(() => {\n    updateStoredValue();\n  }, []);\n\n  // Вызываем функцию обновления периодически, чтобы следить за изменениями в локальном хранилище\n  useEffect(() => {\n    const interval = setInterval(updateStoredValue, 1000); // Пример: каждую секунду\n    return () => clearInterval(interval);\n  }, []);\n\n  return [value, setValue];\n}\n","/Users/vb/comments/src/components/Item/Item.tsx",[],[],"/Users/vb/comments/src/components/CommentsList/index.js",[],[],"/Users/vb/comments/src/components/CommentsList/CommentsList.tsx",["76","77","78","79","80"],[],"import React, { useEffect, useState } from 'react';\nimport s from './CommentsList.module.css';\nimport useLocalState from '../../hooks';\nimport Comments from '../Comments/Comments';\nimport { customAlphabet } from 'nanoid';\nimport { HexColorPicker } from 'react-colorful';\n\nexport default function CommentsList() {\n  const [items, setItems] = useLocalState('items', []);\n\n  const [activeItem, setActiveItem] = useLocalState('activeItem', []);\n  const [name, setName] = useState('');\n\n  const [colorPickerVisible, setColorPickerVisible] = useState(false);\n  const [color, setColor] = useState('#000000');\n  const [commentColors, setCommentColors] = useState({});\n\n  const nanoid = customAlphabet('1234567890', 8);\n  const idNano = nanoid();\n\n  const handleChange = (event: { target: any }) => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = (event: { target: any; preventDefault: () => void }) => {\n    event.preventDefault();\n\n    const updatedItems = items.map((i: { comments: any; id: any }) => {\n      if (i.id == activeItem[0].id) {\n        i.comments.push([activeItem[0].id, name, idNano, color]);\n      }\n      return i;\n    });\n    setItems(updatedItems);\n    setName('');\n    setColor('#000000');\n\n    const active = items.filter((e: { id: any }) => e.id == activeItem[0].id);\n    setActiveItem(active);\n  };\n\n  const handleColorChange = () => {\n    setColorPickerVisible(!colorPickerVisible);\n  };\n\n  return (\n    <div className={s.commentsBlok}>\n      {activeItem && activeItem[0] && activeItem[0].comments ? (\n        <h2 className={s.commentsName}>Comments{` #${activeItem[0].id}`}</h2>\n      ) : null}\n      <ul className={s.listCommentsName}>\n        {activeItem && activeItem[0] && activeItem[0].comments ? (\n          activeItem[0].comments.map((e: string) => (\n            <Comments commentName={e[1]} color={e[3]} key={e[2]} />\n          ))\n        ) : (\n          <p>No comments available</p>\n        )}\n      </ul>\n      <form onSubmit={handleSubmit}>\n        <div className={s.commentsBlokElem}>\n          <div\n            className={s.colorInputBlock}\n            style={{\n              backgroundColor: color,\n            }}\n            onClick={handleColorChange}\n          ></div>\n          {colorPickerVisible && (\n            <HexColorPicker\n              className={s.colorPicker}\n              color={color}\n              onChange={setColor}\n              style={{\n                position: 'absolute',\n                zIndex: 1,\n              }}\n            />\n          )}\n          <textarea\n            placeholder=\"Type comment here...\"\n            className={s.nameTextarea}\n            name=\"name\"\n            title=\"Place for comments\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n\n          <button type=\"submit\" className={s.commentsAddButton}>\n            Add new\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/Users/vb/comments/src/components/Comments/Comments.tsx",[],[],{"ruleId":"81","severity":1,"message":"82","line":1,"column":15,"nodeType":"83","messageId":"84","endLine":1,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":34,"column":58,"nodeType":"87","messageId":"88","endLine":34,"endColumn":60},{"ruleId":"89","severity":1,"message":"90","line":35,"column":6,"nodeType":"91","endLine":35,"endColumn":8,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"90","line":41,"column":6,"nodeType":"91","endLine":41,"endColumn":8,"suggestions":"93"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"94","line":16,"column":10,"nodeType":"83","messageId":"84","endLine":16,"endColumn":23},{"ruleId":"81","severity":1,"message":"95","line":16,"column":25,"nodeType":"83","messageId":"84","endLine":16,"endColumn":41},{"ruleId":"85","severity":1,"message":"86","line":29,"column":16,"nodeType":"87","messageId":"88","endLine":29,"endColumn":18},{"ruleId":"85","severity":1,"message":"86","line":38,"column":58,"nodeType":"87","messageId":"88","endLine":38,"endColumn":60},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'updateStoredValue'. Either include it or remove the dependency array.","ArrayExpression",["96"],["97"],"'commentColors' is assigned a value but never used.","'setCommentColors' is assigned a value but never used.",{"desc":"98","fix":"99"},{"desc":"98","fix":"100"},"Update the dependencies array to be: [updateStoredValue]",{"range":"101","text":"102"},{"range":"103","text":"102"},[984,986],"[updateStoredValue]",[1240,1242]]